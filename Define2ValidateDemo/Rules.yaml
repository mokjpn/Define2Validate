rules:
-
  expr: 'nchar(as.character(DOMAIN)) <= 2'
  name: Length of DOMAIN
-
  expr: '!is.na(DOMAIN)'
  name: DOMAIN is mandatory
-
  expr: 'as.character(DOMAIN) %in% CT[CT$OID == "CL.DOMAIN", "CodedValue"]'
  name: DOMAIN should follow codelist CL.DOMAIN
-
  expr: 'nchar(as.character(LBSEQ)) <= 2'
  name: Length of LBSEQ
-
  expr: '!is.na(LBSEQ)'
  name: LBSEQ is mandatory
-
  expr: 'regexpr("^[0-9-]+$",as.character(LBSEQ)) == 1'
  name: LBSEQ should be integer
-
  expr: 'nchar(as.character(LBREFID)) <= 7'
  name: Length of LBREFID
-
  expr: 'nchar(as.character(LBTESTCD)) <= 7'
  name: Length of LBTESTCD
-
  expr: '!is.na(LBTESTCD)'
  name: LBTESTCD is mandatory
-
  expr: 'as.character(LBTESTCD) %in% CT[CT$OID == "CL.LBTESTCD", "CodedValue"]'
  name: LBTESTCD should follow codelist CL.LBTESTCD
-
  expr: 'nchar(as.character(LBTEST)) <= 22'
  name: Length of LBTEST
-
  expr: '!is.na(LBTEST)'
  name: LBTEST is mandatory
-
  expr: 'as.character(LBTEST) %in% CT[CT$OID == "CL.LBTEST", "CodedValue"]'
  name: LBTEST should follow codelist CL.LBTEST
-
  expr: 'nchar(as.character(LBCAT)) <= 10'
  name: Length of LBCAT
-
  expr: 'nchar(as.character(LBORRES)) <= 8'
  name: Length of LBORRES
-
  expr: 'nchar(as.character(LBORRESU)) <= 7'
  name: Length of LBORRESU
-
  expr: 'as.character(LBORRESU) %in% CT[CT$OID == "CL.LBRESU", "CodedValue"]'
  name: LBORRESU should follow codelist CL.LBRESU
-
  expr: 'nchar(as.character(LBORNRLO)) <= 8'
  name: Length of LBORNRLO
-
  expr: 'nchar(as.character(LBORNRHI)) <= 8'
  name: Length of LBORNRHI
-
  expr: 'nchar(as.character(LBSTRESC)) <= 8'
  name: Length of LBSTRESC
-
  expr: 'nchar(as.character(LBSTRESN)) <= 5'
  name: Length of LBSTRESN
-
  expr: '(regexpr("^[0-9.+-eE]+$",as.character(LBSTRESN)) == 1) & !is.na(as.numeric(LBSTRESN))'
  name: LBSTRESN should be float
-
  expr: 'nchar(as.character(LBSTRESU)) <= 7'
  name: Length of LBSTRESU
-
  expr: 'nchar(as.character(LBSTNRLO)) <= 4'
  name: Length of LBSTNRLO
-
  expr: '(regexpr("^[0-9.+-eE]+$",as.character(LBSTNRLO)) == 1) & !is.na(as.numeric(LBSTNRLO))'
  name: LBSTNRLO should be float
-
  expr: 'nchar(as.character(LBSTNRHI)) <= 4'
  name: Length of LBSTNRHI
-
  expr: '(regexpr("^[0-9.+-eE]+$",as.character(LBSTNRHI)) == 1) & !is.na(as.numeric(LBSTNRHI))'
  name: LBSTNRHI should be float
-
  expr: 'nchar(as.character(LBSTNRC)) <= 19'
  name: Length of LBSTNRC
-
  expr: 'nchar(as.character(LBNRIND)) <= 20'
  name: Length of LBNRIND
-
  expr: 'as.character(LBNRIND) %in% CT[CT$OID == "CL.NRIND", "CodedValue"]'
  name: LBNRIND should follow codelist CL.NRIND
-
  expr: 'nchar(as.character(LBSPEC)) <= 5'
  name: Length of LBSPEC
-
  expr: 'as.character(LBSPEC) %in% CT[CT$OID == "CL.SPECTYPE", "CodedValue"]'
  name: LBSPEC should follow codelist CL.SPECTYPE
-
  expr: 'nchar(as.character(LBMETHOD)) <= 8'
  name: Length of LBMETHOD
-
  expr: 'as.character(LBMETHOD) %in% CT[CT$OID == "CL.METHOD", "CodedValue"]'
  name: LBMETHOD should follow codelist CL.METHOD
-
  expr: 'nchar(as.character(LBBLFL)) <= 1'
  name: Length of LBBLFL
-
  expr: 'as.character(LBBLFL) %in% CT[CT$OID == "CL.NY", "CodedValue"]'
  name: LBBLFL should follow codelist CL.NY
-
  expr: 'nchar(as.character(LBFAST)) <= 1'
  name: Length of LBFAST
-
  expr: 'as.character(LBFAST) %in% CT[CT$OID == "CL.NY", "CodedValue"]'
  name: LBFAST should follow codelist CL.NY
-
  expr: 'nchar(as.character(VISITNUM)) <= 2'
  name: Length of VISITNUM
-
  expr: 'regexpr("^[0-9-]+$",as.character(VISITNUM)) == 1'
  name: VISITNUM should be integer
-
  expr: 'nchar(as.character(VISIT)) <= 7'
  name: Length of VISIT
-
  expr: 'nchar(as.character(VISITDY)) <= 3'
  name: Length of VISITDY
-
  expr: 'regexpr("^[0-9-]+$",as.character(VISITDY)) == 1'
  name: VISITDY should be integer
-
  expr: 'nchar(as.character(LBDY)) <= 3'
  name: Length of LBDY
-
  expr: 'regexpr("^[0-9-]+$",as.character(LBDY)) == 1'
  name: LBDY should be integer
-
  expr: '(!( LBTESTCD == "BILI" & LBCAT == "CHEMISTRY" & LBSPEC == "BLOOD" )) | nchar(as.character(LBORRES)) <= 3'
  name: Length of BILI(LBORRES)
-
  expr: '(!( LBTESTCD == "BILI" & LBCAT == "CHEMISTRY" & LBSPEC == "BLOOD" )) | (regexpr("^[0-9.+-eE]+$",as.character(LBORRES)) == 1) & !is.na(as.numeric(LBORRES))'
  name: BILI(LBORRES) should be float
-
  expr: '(!( LBTESTCD == "BUN" & LBCAT == "CHEMISTRY" & LBSPEC == "BLOOD" )) | nchar(as.character(LBORRES)) <= 4'
  name: Length of BUN(LBORRES)
-
  expr: '(!( LBTESTCD == "BUN" & LBCAT == "CHEMISTRY" & LBSPEC == "BLOOD" )) | (regexpr("^[0-9.+-eE]+$",as.character(LBORRES)) == 1) & !is.na(as.numeric(LBORRES))'
  name: BUN(LBORRES) should be float
-
  expr: '(!( LBTESTCD == "GLUC" & LBCAT == "CHEMISTRY" & LBSPEC == "BLOOD" )) | nchar(as.character(LBORRES)) <= 3'
  name: Length of GLUC(LBORRES)
-
  expr: '(!( LBTESTCD == "GLUC" & LBCAT == "CHEMISTRY" & LBSPEC == "BLOOD" )) | (regexpr("^[0-9.+-eE]+$",as.character(LBORRES)) == 1) & !is.na(as.numeric(LBORRES))'
  name: GLUC(LBORRES) should be float
-
  expr: '(!( LBTESTCD == "GLUC" & LBCAT == "URINALYSIS" & LBSPEC == "URINE" & LBMETHOD == "DIPSTICK" )) | nchar(as.character(LBORRES)) <= 8'
  name: Length of GLUC(LBORRES)
-
  expr: '(!( LBTESTCD == "GLUC" & LBCAT == "URINALYSIS" & LBSPEC == "URINE" & LBMETHOD == "QUANT" )) | nchar(as.character(LBORRES)) <= 8'
  name: Length of GLUC(LBORRES)
-
  expr: '(!( LBTESTCD == "HCT" & LBCAT == "HEMATOLOGY" & LBSPEC == "BLOOD" )) | nchar(as.character(LBORRES)) <= 4'
  name: Length of HCT(LBORRES)
-
  expr: '(!( LBTESTCD == "HCT" & LBCAT == "HEMATOLOGY" & LBSPEC == "BLOOD" )) | (regexpr("^[0-9.+-eE]+$",as.character(LBORRES)) == 1) & !is.na(as.numeric(LBORRES))'
  name: HCT(LBORRES) should be float
-
  expr: '(!( LBTESTCD == "HGB" & LBCAT == "HEMATOLOGY" & LBSPEC == "BLOOD" )) | nchar(as.character(LBORRES)) <= 4'
  name: Length of HGB(LBORRES)
-
  expr: '(!( LBTESTCD == "HGB" & LBCAT == "HEMATOLOGY" & LBSPEC == "BLOOD" )) | (regexpr("^[0-9.+-eE]+$",as.character(LBORRES)) == 1) & !is.na(as.numeric(LBORRES))'
  name: HGB(LBORRES) should be float
-
  expr: '(!( LBTESTCD == "LYM" & LBCAT == "HEMATOLOGY" & LBSPEC == "BLOOD" )) | nchar(as.character(LBORRES)) <= 4'
  name: Length of LYM(LBORRES)
-
  expr: '(!( LBTESTCD == "LYM" & LBCAT == "HEMATOLOGY" & LBSPEC == "BLOOD" )) | (regexpr("^[0-9.+-eE]+$",as.character(LBORRES)) == 1) & !is.na(as.numeric(LBORRES))'
  name: LYM(LBORRES) should be float
-
  expr: '(!( LBTESTCD == "OCCBLD" & LBCAT == "URINALYSIS" & LBSPEC == "URINE" )) | nchar(as.character(LBORRES)) <= 8'
  name: Length of OCCBLD(LBORRES)
-
  expr: '(!( LBTESTCD == "PH" & LBCAT == "URINALYSIS" & LBSPEC == "URINE" )) | nchar(as.character(LBORRES)) <= 3'
  name: Length of PH(LBORRES)
-
  expr: '(!( LBTESTCD == "PH" & LBCAT == "URINALYSIS" & LBSPEC == "URINE" )) | (regexpr("^[0-9.+-eE]+$",as.character(LBORRES)) == 1) & !is.na(as.numeric(LBORRES))'
  name: PH(LBORRES) should be float
-
  expr: '(!( LBTESTCD == "VITB12" & LBCAT == "CHEMISTRY" & LBSPEC == "SERUM" )) | nchar(as.character(LBORRES)) <= 3'
  name: Length of VITB12(LBORRES)
-
  expr: '(!( LBTESTCD == "VITB12" & LBCAT == "CHEMISTRY" & LBSPEC == "SERUM" )) | regexpr("^[0-9-]+$",as.character(LBORRES)) == 1'
  name: VITB12(LBORRES) should be integer
-
  expr: '(!( LBTESTCD == "VITB9" & LBCAT == "CHEMISTRY" & LBSPEC == "BLOOD" )) | nchar(as.character(LBORRES)) <= 5'
  name: Length of VITB9(LBORRES)
-
  expr: '(!( LBTESTCD == "VITB9" & LBCAT == "CHEMISTRY" & LBSPEC == "BLOOD" )) | (regexpr("^[0-9.+-eE]+$",as.character(LBORRES)) == 1) & !is.na(as.numeric(LBORRES))'
  name: VITB9(LBORRES) should be float
---
